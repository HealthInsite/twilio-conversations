image: cirrusci/flutter:stable

stages:
  - lint
  - test
  - publish

dartdoc:
  stage: lint
  script:
    - flutter pub get
    - dartdoc --no-auto-include-dependencies --quiet
  only:
    refs:
      - merge_requests
    changes:
      - lib/**/*
      - README.md
      - .gitlab-ci.yml

flutter_analyze:
  stage: lint
  script:
    - flutter pub get
    - flutter analyze --pub
    - flutter format -n . --set-exit-if-changed
  only:
    refs:
      - merge_requests
    changes:
      - lib/**/*.dart
      - test/**/*.dart
      - example/lib/**/*.dart
      - example/test/**/*.dart
      - .gitlab-ci.yml

kotlin_analyze:
  image: kkopper/ktlint:0.36.0
  stage: lint
  script:
    - cd android || exit 1
    - ktlint
  only:
    refs:
      - merge_requests
    changes:
      - android/**/*.kt
      - .gitlab-ci.yml

pod_lint:
  image: ruby:2.7-slim-buster
  stage: lint
  script:
    - cd ios || exit 1
    - apt-get update && apt-get install -y git curl unzip
    - gem install cocoapods -v 1.10.0
    - adduser --disabled-password --gecos "" cocoapods # Running as root is not allowed for CocoaPods
    - export RUBYOPT='-W0' # Disable ruby deprecation warnings
    - su cocoapods -c "pod lib lint --allow-warnings twilio_conversations.podspec"
  only:
    refs:
      - merge_requests
    changes:
      - ios/twilio_conversations.podspec
      - .gitlab-ci.yml

swift_analyze:
  image: registry.gitlab.com/twilio-flutter/docker-swiftlint/docker-swiftlint:0.39.1
  stage: lint
  script:
    - cd ios || exit 1
    - swiftlint --strict
  only:
    refs:
      - merge_requests
    changes:
      - ios/**/*.swift
      - .gitlab-ci.yml

unit_test:
  stage: test
  script:
    - flutter test --coverage --pub test
    - lcov --list coverage/lcov.info
  only:
    refs:
      - merge_requests
      - master
    changes:
      - lib/**/*
      - test/**/*
      - lib/**/*
      - .gitlab-ci.yml

dry-run:
  stage: publish
  script:
    - flutter pub get
    - flutter pub publish --dry-run
  only:
    refs:
      - merge_requests
    changes:
      - /**/*
      - .gitlab-ci.yml

pub-dev:
  # https://robertohuertas.com/2019/01/20/publish-flutter-package-with-travis/
  stage: publish
  script:
    - |
      if [ -z "${PUB_DEV_PUBLISH_ACCESS_TOKEN}" ]; then
        echo "Missing PUB_DEV_PUBLISH_ACCESS_TOKEN environment variable"
        exit 1
      fi

      if [ -z "${PUB_DEV_PUBLISH_REFRESH_TOKEN}" ]; then
        echo "Missing PUB_DEV_PUBLISH_REFRESH_TOKEN environment variable"
        exit 1
      fi

      if [ -z "${PUB_DEV_PUBLISH_TOKEN_ENDPOINT}" ]; then
        echo "Missing PUB_DEV_PUBLISH_TOKEN_ENDPOINT environment variable"
        exit 1
      fi

      if [ -z "${PUB_DEV_PUBLISH_EXPIRATION}" ]; then
        echo "Missing PUB_DEV_PUBLISH_EXPIRATION environment variable"
        exit 1
      fi

      cat <<EOF > ~/.pub-cache/credentials.json
      {
        "accessToken":"$(echo "${PUB_DEV_PUBLISH_ACCESS_TOKEN}" | base64 -d)",
        "refreshToken":"$(echo "${PUB_DEV_PUBLISH_REFRESH_TOKEN}" | base64 -d)",
        "tokenEndpoint":"${PUB_DEV_PUBLISH_TOKEN_ENDPOINT}",
        "scopes":["https://www.googleapis.com/auth/userinfo.email","openid"],
        "expiration":${PUB_DEV_PUBLISH_EXPIRATION}
      }
      EOF
    - flutter pub get
    - flutter pub publish -f
  only:
    refs:
      - /^v.*$/
  except:
    refs:
      - branches

changelog:
  image: curlimages/curl
  stage: publish
  script:
    - |
      if [ -z "${DISCORD_WEBHOOK}" ]; then
        echo "Missing DISCORD_WEBHOOK environment variable"
        exit 1
      fi

      TAG_NAME="$(awk '/^version: /{print $NF}' pubspec.yaml)"
      PUB_SPEC_NAME="$(awk '/^name: /{print $NF}' pubspec.yaml)"
      CHANGELOG_MESSAGE=$(sed '1,/^##/!d;/##/d' CHANGELOG.md | awk '{printf "%s\\n", $0}')

      DATA='{
        "embeds": [ {
          "author": {
            "name": "'"$CI_PROJECT_NAME"'",
            "url": "https://pub.dev/packages/'"$PUB_SPEC_NAME"'/versions/'"$TAG_NAME"'",
            "icon_url": "https://assets.gitlab-static.net/uploads/-/system/project/avatar/'"$CI_PROJECT_ID"'/'"$CI_PROJECT_NAME"'.png?width=64"
          },
          "description": "Version `'"$TAG_NAME"'` has just been released on pub.dev",
          "fields": [
            {
              "name": "Changelog",
              "value": "```markdown'"${CHANGELOG_MESSAGE}"'```",
              "inline": false
            },
            {
              "name": "Pipeline",
              "value": "['"$CI_PIPELINE_IID"']('"$CI_PROJECT_URL/pipelines/$CI_PIPELINE_IID"')",
              "inline": true
            },
            {
              "name": "Commit",
              "value": "['"$CI_COMMIT_SHORT_SHA"']('"$CI_PROJECT_URL/-/commit/$CI_COMMIT_SHA"')",
              "inline": true
            }
          ]
        } ]
      }'

      curl --fail -H Content-Type:application/json -d "$DATA" $DISCORD_WEBHOOK
  only:
    refs:
      - /^v.*$/
  except:
    refs:
      - branches

tag:
  image: curlimages/curl
  stage: publish
  script:
    - |
      if [ -z "${GITLAB_API_TOKEN}" ]; then
        echo "Missing GITLAB_API_TOKEN environment variable"
        exit 1
      fi

      export TAG_NAME="$(awk '/^version: /{print $NF}' pubspec.yaml)"
      curl --fail --request POST --header "PRIVATE-TOKEN: ${GITLAB_API_TOKEN}" \
        --data-urlencode "tag_name=v${TAG_NAME}" \
        --data-urlencode "ref=master" \
        --data-urlencode "message=Check the [CHANGELOG.md](${CI_PROJECT_URL}/-/blob/master/CHANGELOG.md)" \
        "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/repository/tags"
  environment:
    name: pub-dev-plugin
    url: https://pub.dev/packages/twilio_conversations
  when: manual
  only:
    refs:
      - master
    changes:
      - /**/*
      - .gitlab-ci.yml
