// Mocks generated by Mockito 5.0.16 from annotations
// in twilio_conversations/example/ios/.symlinks/plugins/twilio_conversations/test/participant/participant_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:twilio_conversations/api.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeUserData_0 extends _i1.Fake implements _i2.UserData {}

/// A class which mocks [ParticipantApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockParticipantApi extends _i1.Mock implements _i2.ParticipantApi {
  MockParticipantApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i2.UserData> getUser(
          String? arg_conversationSid, String? arg_participantSid) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getUser, [arg_conversationSid, arg_participantSid]),
              returnValue: Future<_i2.UserData>.value(_FakeUserData_0()))
          as _i3.Future<_i2.UserData>);
  @override
  _i3.Future<void> setAttributes(String? arg_conversationSid,
          String? arg_participantSid, _i2.AttributesData? arg_attributes) =>
      (super.noSuchMethod(
          Invocation.method(#setAttributes,
              [arg_conversationSid, arg_participantSid, arg_attributes]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> remove(
          String? arg_conversationSid, String? arg_participantSid) =>
      (super.noSuchMethod(
          Invocation.method(#remove, [arg_conversationSid, arg_participantSid]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  String toString() => super.toString();
}
